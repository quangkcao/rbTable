/*****************Plugin: rbTable*Type:jQuery*Author: Quang K. Cao *Website: www.runbusi.com*Version 2.0*10/26/2012*Licensed under the MIT license.**DESCRIPTION*Main: Customizable, sortable, highlighted and paginated table - turn different HTML elements into an interactive table.*Return method: array of selected rows with custome defined attribute or their html content.**DEFAULT VALUES*METHOD 'init' //initial method*table:'table',//class of table 	*table_border:[1,'solid','#ccc'],//the border style of table*               [border-width, border-style, border-color]*header:'th',//class of header			*header_bg_color:['transparent','#ccc'],//background of header					*		[normal state, hover state]*header_text_color:['',''],//text color in header*		[normal state, hover state]		*row:'tr',//class of row that is applied				*row_bg:['none','#ccc','#666'],//background of row					*		[normal state, hover state, click state]*text_color:['','',''],//text color in row*		  [normal state, hover state, click state]*pointer_box_border:[1,'dashed','#FFF'],//style for pointer box indicated when user drag mouse over the table						*                   [border-width, border-style, border-color]*sort_indicator:['asc', 'desc'],//class identify icon for asc/desc order*		  [asc class, desc class]*pagination:['', 'right', 'both'] ,//*          [limit per page, position 'left' 'right' 'center' of pagination, show both 'top' and 'bottom' of table]]		  *METHOD 'selected_rows' -> return an array of selected row by a 'attr' attribute*attr:'name'// attribute of row, for example, 'name' or 'id'.*			//if attr='html' return html content****************/(function( $ ){	var methods={		init : function(options){			var defaults = {		                                        table               :'table',                                        table_border        :[1,'solid','#ccc'],                                          header              :'th',                                        header_bg_color     :['transparent','#ccc'],                                        header_text_color   :['',''],                                        row                 :'tr',                                        row_bg              :['none','#ccc','#666'],                                        text_color          :['','',''],                                        row_border          :[1,'solid','#ccc'],                                         pointer_box_border  :[1,'dashed','#FFF'],                                        sort_indicator      :['asc', 'desc'],                                        pagination          :['', 'right', 'both'] 					   }; 		     	    		var win=$(window);		var tRow,hRow,tBox, hRow;		var hTbl;		var tTbl;		var row_click="row_click";				var row_hover="row_hover";	                var header_hover="header_hover";                		return this.each(function(){                        var THIS=$(this);                        if ( options )  $.extend( defaults, options );                        //check if using pagination                        if (isNaN(parseInt(defaults.pagination[0]))){                            defaults.pagination[0]=$('.'+defaults.row,$('.'+defaults.table,$(this))).size();                        }                         //pre style                        $('.'+defaults.table,$(this)).css({                                                            'border' :defaults.table_border[0]+'px '+defaults.table_border[1]+' '+defaults.table_border[2]                                                        });                          $('.'+defaults.row,$('.'+defaults.table,$(this))).css({                                                            'border-top' :defaults.row_border[0]+'px '+defaults.row_border[1]+' '+defaults.row_border[2]                                                        });                                   			$('.'+defaults.table,$(this)).bind('mousedown',onMouseDownTable);								$(this).bind('mouseup',onMouseUpTable);					$(this).bind('mouseleave',onMouseLeaveTable);			$(this).css({'background':defaults.bg,                                     'cursor':'default'                                    });								$(this).data('defaults',{                                                row : defaults.row,                                                row_click : row_click                                                });			$(this).append('<div class="pointer_box"></div>');                        $('.pointer_box',$(this)).css({'position'   :'absolute',                                                        'width'   :'0',                                                        'height'   :'0',                                                        'border'    :defaults.pointer_box_border[0]+'px '+defaults.pointer_box_border[1]+' '+defaults.pointer_box_border[2],                                                        'display'   :'none',						                                                        'z-index'       :$(this).index()+1                                                        });                                    //init row styling	                        if(defaults.text_color[0]!=''){                            $('.'+defaults.row,$('.'+defaults.table,$(this))).css({'color':defaults.text_color[0]});				                        }                         			$('.'+defaults.row,$('.'+defaults.table,$(this))).hover(									  			  function () {				 				  				  	$(this).addClass(row_hover);                                if(defaults.row_bg[1]){                                    $('.'+row_hover,$(this).parent()).css({'background':defaults.row_bg[1]});                                }								if(defaults.text_color[1]){					$('.'+row_hover,$(this).parent()).css({'color':defaults.text_color[1]});								}			  }, 			  function () {				  	$(this).removeClass(row_hover);	                                if(defaults.row_bg[0]){                                    $(this).css('background',defaults.row_bg[0]);                                }				if(defaults.text_color[0]){					$(this).css({'color':defaults.text_color[0]});								}				if($(this).hasClass(row_click)) {                                        if(defaults.row_bg[2]){                                            $('.'+row_click,$(this).parent()).css('background',defaults.row_bg[2]);                                        }					if(defaults.text_color[2]){                                            $('.'+row_click,$(this).parent()).css({'color':defaults.text_color[2]});									}				}			  }			);                        //init header text styling                                                if(defaults.header_text_color[0]!=''){                            $('.'+defaults.header, $('.'+defaults.table,$(this))).css({'color':defaults.header_text_color[0]});				                        }                         if(defaults.header_bg_color[0]){                            $('.'+defaults.header, $('.'+defaults.table,$(this))).css({'background-color':defaults.header_bg_color[0]});				                        }                        //hover for header child which contain .col class other than itself			$('.col', $('.'+defaults.header,$('.'+defaults.table,$(this)))).hover(									  			  function () {				 				  				  	$(this).addClass(header_hover);                                if(defaults.header_bg_color[1]){                                    $('.'+header_hover,$(this).parent()).css({'background-color':defaults.header_bg_color[1]});                                }								if(defaults.header_text_color[1]!= ''){                                    $('.'+header_hover,$(this).parent()).css({'color':defaults.header_text_color[1]});								}			  }, 			  function () {				  	$(this).removeClass(header_hover);	                                if(defaults.header_bg_color[0]){                                    $(this).css('background-color',defaults.header_bg_color[0]);                                }   				if(defaults.header_text_color[0]!= ''){					$(this).css({'color':defaults.header_text_color[0]});								}			  }			);                                            //PAGINATION --offline                        var start=0;                         var end= defaults.pagination[0];                        total=$('.'+defaults.row,$(this)).size();                         //if limit set show a limit number of rows                         refreshTable(start, end, $(this));                        if(defaults.pagination[0]< total){                            if (defaults.pagination[2]=='top' || defaults.pagination[2]=='both'){                                $(this).prepend('<div class="pagination"></div>');                            }                            if (defaults.pagination[2]=='bottom' || defaults.pagination[2]=='both'){                                $(this).append('<div class="pagination"></div>');                            }                            $('.pagination',$(this)).css({'text-align'   :defaults.pagination[1],                                                          'z-index'      :$(this).index()+1                                                        });                                                                 //previous button                            $('.pagination',$(this)).append('<a class="pre_nav" href="">&laquo;</a>');                            $('.pre_nav',$('.pagination',$(this))).bind('click',onPreTable);                            //input box '/' number of pages 1/10                            $('.pagination',$(this)).append('<input type="text" name="page_input" class="page_input" value="1" disabled="disabled"/> / '+Math.ceil(total/defaults.pagination[0]));                            //next button                           $('.pagination',$(this)).append('<a class="next_nav" href="">&raquo;</a>');                           $('.next_nav',$('.pagination',$(this))).bind('click',onNextTable);                           //hide pre_nav & next_nav if num of pages are greater or equal the limit                           if(total<=defaults.pagination[0]){                                $('.pre_nav',$('.pagination',$(this))).hide();                           }                          }                        //                        var order=defaults.sort_indicator[1]; //init for desc order                        $('.col',$('.'+defaults.header,$('.'+defaults.table,$(this)))).each(function(hindex){                            $(this).click(function(){                                var reordered=[];                                var start_point=0;                                $('.'+defaults.row, $(this).parent().parent()).each(function(rindex){                                    if(start_point==0)                                        start_point= rindex;                                    $('.col',$(this)).each(function(cindex){                                        if (cindex==hindex){                                            a_order=[$(this).html(),$(this).parent()]                                            reordered.push(a_order);                                        }                                    })                                })                                order=(order==defaults.sort_indicator[0])?defaults.sort_indicator[1]:defaults.sort_indicator[0];                                //remove all asc/desc indicator                                $('.col',$(this).parent()).each(function(){                                    $(this).removeClass(defaults.sort_indicator[0]);                                    $(this).removeClass(defaults.sort_indicator[1]);                                                                   })                                //add class to show asc/desc indicator                                if (order==defaults.sort_indicator[0]){                                    $(this).addClass(order);                                    $(this).removeClass(defaults.sort_indicator[1]);                                }else{                                    $(this).addClass(order);                                    $(this).removeClass(defaults.sort_indicator[0]);                                }                                //start sorting                                reordered.sort(function(a,b){                                   if(a[0]<=b[0]){                                        return (order==defaults.sort_indicator[0])?1:-1;                                    }                                    return (order==defaults.sort_indicator[0])?-1:1;                                })                                   for(var j=0; j<reordered.length; j++){                                      $(this).parent().parent().append(reordered[j][1])                                }                                refreshTable(start,end, $(this));                            })                        })                        function onPreTable(e){                            if(start <=0){                                if(($('.pagination', $(this).parent().parent())).val()!=1){                                 start = 0;                                 end = defaults.pagination[0];                                }                                 e.preventDefault();                                 return false;                            }else{                                start=start-defaults.pagination[0];                                end= end-defaults.pagination[0];                            }                             if(end<=$('.'+defaults.row,$('.'+defaults.table,$(this).parent().parent())).size())                                $('.next_nav',$(this).parent()).show();                            refreshTable(start, end, $(this).parent().parent());                            $('input:text[name=page_input]',$('.pagination', $(this).parent().parent())).val(parseInt($('input:text[name=page_input]',$('.pagination', $(this).parent().parent())).val())-1);                            return false;                        }                        function onNextTable(e){                            if(end >=$('.'+defaults.row,$('.'+defaults.table,$(this).parent().parent())).size()){                                if($('input:text[name=page_input]',$('.pagination', $(this).parent().parent())).val()<$('.'+defaults.table,$(this).parent().parent()).size()){                                    start=$('.'+defaults.row,$('.'+defaults.table,$(this).parent().parent())).size() - defaults.pagination[0];                                    end= $('.'+defaults.row,$('.'+defaults.table,$(this).parent().parent())).size();                                }                                e.preventDefault();                                 return false;                            }else{                                start=start+defaults.pagination[0];                                end= end+defaults.pagination[0];                            }                                if(start>1)                                $('.pre_nav',$(this).parent()).show();                            refreshTable(start, end, $(this).parent().parent());                            $('input:text[name=page_input]',$('.pagination', $(this).parent().parent())).val(parseInt($('input:text[name=page_input]',$('.pagination', $(this).parent().parent())).val())+1);                            return false;                        }                           function refreshTable(start, end, obj){                            $('.'+defaults.row,$('.'+defaults.table,obj)).each(function(index){                                if((index>=start) && (index<end)){                                    $(this).show();                                }else{                                    $(this).hide();                                }                            })                        }     		});	                		function onMouseLeaveTable(e){			$('.pointer_box',$(this)).hide();									$(this).unbind('mousemove');					}			function onMouseDownTable(e){				//disable text selection event			$(this).css({'-webkit-user-select': 'none',						                                    '-khtml-user-select': 'none',                                    '-moz-user-select': 'none',                                    '-o-user-select': 'none',                                    'user-select': 'none'                                    });						//reset pointer_box;			$('.pointer_box',$(this).parent()).css({'width':'0px',                                                        'height':'0px'                                                      });			//start point(xPos,yPos)			var yPos=e.pageY;				var xPos=e.pageX;		 					var offset = (win.attr('pageYOffset') || $(document.documentElement).attr('scrollTop'));//check IE			$('.pointer_box',$(this).parent()).offset({top: e.pageY+offset, left: e.pageX});                        $('.pointer_box',$(this).parent()).show();			var newWidth=0;			var newHeight=0;			var newTop=0;			var newLeft=0;			var first=true;				//			yPos=e.pageY;			if(e.shiftKey){//shift key				$('.'+defaults.row,$(this)).each(function(){																								if($(this).hasClass(row_click+'_first')){ 							if(yPos>$(this).offset().top){	//down direction										tBox=$(this).offset().top+1;							hBox=e.pageY-tBox;						}else{//up direction													tBox=e.pageY-1;							hBox=$(this).offset().top-e.pageY+$(this).height();											}					}								})				//start select follow PointerBox				tTbl=$(this).offset().top;				hTbl=$(this).height();					if((tBox>=tTbl)&&(tBox<=(tTbl+hTbl))){										$('.'+defaults.row,$(this)).each(function(){														tRow=$(this).offset().top;						hRow=$(this).height();						if(((tRow+hRow)>=tBox)&&(tRow<=(tBox+hBox))){//limit row in pointer_box																														if(!$(this).hasClass(row_click)){								$(this).addClass(row_click);	                                                                if(defaults.row_bg[2]!=''){                                                                    $(this).css('background',defaults.row_bg[2]);                                                                }							}														if(first){								$(this).addClass(row_click+'_first');													}							first=false;						}else{								$(this).removeClass(row_click);							$(this).removeClass(row_click+'_first');                                                        if(defaults.row_bg[0]!=''){                                                            $(this).css('background',defaults.row_bg[0]);                                                        }							if(defaults.text_color[0]!=''){								$(this).css({'color':defaults.text_color[0]});											}						}									})					}					}else if(e.ctrlKey){//Ctrl Key				$('.'+defaults.row,$(this)).each(function(){					tRow=$(this).offset().top;					hRow=$(this).height();												if(((tRow+hRow)>=yPos)&&(tRow<=yPos)){//determine which row is clicked 						if($(this).hasClass(row_click)){																					$(this).removeClass(row_click);							$(this).removeClass(row_click+'_first');													}else{							$(this).addClass(row_click);							$(this).addClass(row_click+'_first');							}					}				});			}else{				$('.'+defaults.row,$(this)).each(function(){												  						tRow=$(this).offset().top;					hRow=$(this).height();						if(((tRow+hRow)>=yPos)&&(tRow<=yPos)){//determine which row is clicked 																																if(!$(this).hasClass(row_click)){							$(this).addClass(row_click);																						}                                                if(defaults.row_bg[2]!=''){                                                    $('.'+row_click,$(this)).css('background',defaults.row_bg[2]);                                                }   						if(defaults.text_color[2]!=''){							$('.'+row_click,$(this)).css({'color':defaults.text_color[2]});										}							if(first){							$(this).addClass(row_click+'_first');												}						first=false;					}else{							$(this).removeClass(row_click);						$(this).removeClass(row_click+'_first');                                                if(defaults.row_bg[0]!=''){                                                    $(this).css('background',defaults.row_bg[0]);                                                }    						if(defaults.text_color[0]!=''){							$(this).css({'color':defaults.text_color[0]});										}					}					})				}			//init mousemove event			$(this).mousemove(function(e){									//end point(e.pageX,e.pageY)				if(e.pageX>=xPos){//right direction					if(e.pageY<yPos){//right-up direction						newTop=e.pageY;						newLeft=xPos;						newWidth=e.pageX-xPos;						newHeight=yPos-e.pageY;					}else{//right-down direction						newTop=yPos;						newLeft=xPos;						newWidth=e.pageX-xPos;						newHeight=e.pageY-yPos;					}				}else {//left direction					if(e.pageY<yPos){//leftt-up direction						newTop=e.pageY;						newLeft=e.pageX;						newWidth=xPos-e.pageX;						newHeight=yPos-e.pageY;					}else{//left-down direction						newTop=yPos;						newLeft=e.pageX;						newWidth=xPos-e.pageX;						newHeight=e.pageY-yPos;					}				}						$('.pointer_box',$(this).parent()).offset({top: newTop, left: newLeft});								$('.pointer_box',$(this).parent()).width(newWidth-2*defaults.pointer_box_border[0]);				$('.pointer_box',$(this).parent()).height(newHeight-2*defaults.pointer_box_border[0]);				tBox= $('.pointer_box',$(this).parent()).offset().top;							hBox=newHeight;					tTbl=$(this).offset().top;				hTbl=$(this).height();																if((tBox>=tTbl)&&(tBox<=(tTbl+hTbl))){										$('.'+defaults.row,$(this)).each(function(){														tRow=$(this).offset().top;						hRow=$(this).height();						if(((tRow+hRow)>=tBox)&&(tRow<=(tBox+hBox))){//limit row in pointer_box																							if(!$(this).hasClass(row_click)){								$(this).addClass(row_click);																							}														if(first){								$(this).addClass(row_click+'_first');													}							first=false;						}else{								if(!e.ctrlKey){//Ctrl Key								$(this).removeClass(row_click);								$(this).removeClass(row_click+'_first');                                                                if(defaults.row_bg[0]!=''){                                                                    $(this).css('background',defaults.row_bg[0]);                                                                }								if(defaults.text_color[0]!=''){									$(this).css({'color':defaults.text_color[0]});												}															}						}									})					}			})		}				function onMouseUpTable(e){						$(this).unbind('mousemove');					$('.pointer_box',$(this)).hide();									return false;					}					},		selected_rows : function(attr){			attr=(typeof attr == 'undefined') ?'name' : attr;			var rows=new Array();			    			var data=$(this).data('defaults');			$('.'+data.row,$(this)).each(function(){				if($(this).hasClass(data.row_click)){								  						if(attr=='html'){						rows.push($(this).html());						}else{						rows.push($(this).attr(attr));						}				}			})			return rows;				}	}	  	$.fn.rbTable = function(method) {		if ( methods[method] ) {		  return methods[ method ].apply( this, Array.prototype.slice.call( arguments, 1 ));		} else if ( typeof method === 'object' || ! method ) {		  return methods.init.apply( this, arguments );		} else {		  $.error( 'Method ' +  method + ' does not exist' );		}  	 };	 	})( jQuery );   